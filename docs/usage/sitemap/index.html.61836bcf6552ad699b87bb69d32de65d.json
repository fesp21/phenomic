{"head":{"title":"How to generate a sitemap with Phenomic","description":"Phenomic allows you to generate a sitemap very easily if you use the phenomicLoader. The phenomic-theme-base already handles a default XMLâ€¦"},"body":"<p>Phenomic allows you to generate a sitemap very easily if you use the <code>phenomicLoader</code>.</p>\n<p>The phenomic-theme-base already handles a default XML sitemap that will grab all your urls.</p>\n<p>Here is a commented part of the webpack configuration that will help:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> pkg <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./package.json\"</span>\n<span class=\"hljs-keyword\">import</span> { phenomicLoader } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"phenomic\"</span>\n<span class=\"hljs-keyword\">import</span> PhenomicLoaderSitemapWebpackPlugin\n  <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"phenomic/lib/loader-sitemap-webpack-plugin\"</span>\n\n<span class=\"hljs-comment\">// ...</span>\n\n  <span class=\"hljs-built_in\">module</span>: {\n    <span class=\"hljs-comment\">// webpack 1</span>\n    loaders: [\n    <span class=\"hljs-comment\">// webpack 2</span>\n    <span class=\"hljs-comment\">// rules: [</span>\n      {\n        <span class=\"hljs-attr\">test</span>: <span class=\"hljs-regexp\">/\\.(md|markdown)$/</span>,\n        <span class=\"hljs-attr\">loader</span>: phenomicLoader,\n        <span class=\"hljs-attr\">query</span>: {\n          <span class=\"hljs-attr\">context</span>: path.join(config.cwd, config.source),\n        },\n\n        <span class=\"hljs-comment\">// ...</span>\n      }\n    ],\n  },\n  <span class=\"hljs-attr\">plugins</span>: [\n    <span class=\"hljs-keyword\">new</span> PhenomicLoaderSitemapWebpackPlugin({\n      <span class=\"hljs-comment\">// This param is mandatory. You must specify your site url.</span>\n      <span class=\"hljs-comment\">// Here we take the url we specified in the `package.json`</span>\n      site_url: pkg.homepage,\n      <span class=\"hljs-comment\">// this special key allows to filter the collection</span>\n      collectionOptions: {\n        <span class=\"hljs-comment\">// For example you can add a front-matter metadata to your `.md` files</span>\n        <span class=\"hljs-comment\">// We display all urls in sitemap except if front-matter `isInSitemap: false` is defined</span>\n        filter: <span class=\"hljs-function\">(<span class=\"hljs-params\">c</span>) =></span> <span class=\"hljs-keyword\">typeof</span>(c.isInSitemap) === <span class=\"hljs-string\">\"undefined\"</span> || c.isInSitemap === <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">sort</span>: <span class=\"hljs-string\">\"__url\"</span>,\n      },\n    }),\n    <span class=\"hljs-comment\">// ...</span>\n  ],\n  <span class=\"hljs-comment\">// ...</span></code></pre>\n","__filename":"docs/usage/sitemap.md","__url":"/docs/usage/sitemap/","__resourceUrl":"/docs/usage/sitemap/index.html","__dataUrl":"/docs/usage/sitemap/index.html.61836bcf6552ad699b87bb69d32de65d.json"}